{"version":3,"sources":["components/hamburger/index.js","components/hamburger/hamburger.js","components/allRecipes/index.js","components/allRecipes/allRecipes.js","components/appHeader/index.js","components/appHeader/appHeader.js","reducers/index.js","store.js","components/ingredient/index.js","components/ingredient/ingredient.js","actions/index.js","components/add/index.js","components/add/add.js","components/searchContainer/searchContainer.js","components/searchContainer/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Hamburger","className","Component","AllRecipes","href","AppHeader","initialIngredientsState","quantity","rootReducer","combineReducers","ings","state","action","type","store","createStore","Ingredient","buttonClicked","onInputRemoved","bind","this","setState","setTimeout","dispatch","inputClassList","placeholder","onClick","Add","SearchContainer","i","props","push","renderIngs","connect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUACeA,E,4JCIX,WACI,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAMA,UAAU,oBAChB,sBAAMA,UAAU,oBAChB,sBAAMA,UAAU,2B,GANOC,aCHxBC,G,kKCIX,WACI,OACI,qBAAKF,UAAU,uBAAf,SACI,mBAAGA,UAAU,eAAeG,KAAK,IAAjC,6G,GAJwBF,cCHzBG,G,kKCMX,WACI,OACI,sBAAKJ,UAAU,aAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALuBC,c,qBCJjCI,EAA0B,CAC5BC,SAAU,GAsBCC,EAJKC,YAAgB,CAChCC,KAhBuB,WAA8C,IAA7CC,EAA4C,uDAApCL,EAAyBM,EAAW,uCACpE,OAAOA,EAAOC,MACV,IAAK,UACD,MAAO,CACHN,SAAUI,EAAMJ,SAAW,GAEnC,IAAK,UACD,MAAO,CACHA,SAAUI,EAAMJ,SAAW,GAEnC,QACI,OAAOI,MCZJG,EAFDC,YAAYP,GCFXQ,G,wDCOX,aAAe,IAAD,8BACV,gBACKL,MAAM,CACPM,eAAe,GAGnB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANZ,E,kDASd,WACIC,KAAKC,SAAS,CAACJ,eAAe,IAC9BK,YAAW,WAAKR,EAAMS,SCZnB,CACHV,KAAM,cDWqC,O,oBAG/C,WAEI,IAAMW,EAAiBJ,KAAKT,MAAMM,cACd,6CAA+C,+BAEnE,OACI,sBAAKhB,UAAU,gBAAf,UACI,uBAAOA,UAAWuB,EAAgBC,YAAY,2HAC9C,wBAAQC,QAASN,KAAKF,eAAgBjB,UAAU,6BAAhD,sB,GAvBwBC,cENzByB,G,kKCOX,WACI,OACI,wBAAQD,QAAS,kBAAMZ,EAAMS,SFT9B,CACHV,KAAM,aEQ+CZ,UAAU,2BAA3D,mB,GAHqBC,cCC3B0B,G,kKAEF,WAAU,IAAD,OAWL,OACI,sBAAK3B,UAAU,mBAAf,UAVe,WAEf,IADA,IAAMS,EAAO,GACLmB,EAAI,EAAGA,GAAK,EAAKC,MAAMvB,SAAUsB,IACrCnB,EAAKqB,KAAK,cAAC,EAAD,GAAiBF,IAG/B,OAAOnB,EAKFsB,GACD,cAAC,EAAD,W,GAhBc9B,cCPf0B,EDmCAK,aANS,SAACtB,GACrB,MAAO,CACHJ,SAAUI,EAAMD,KAAKH,YAId0B,CAAyBL,GEnCzBM,G,kKCSb,WACE,OACE,cAAC,IAAD,CAAUpB,MAAOA,EAAjB,SACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,a,GANuBC,cCLjCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b5b88a87.chunk.js","sourcesContent":["import Hamburger from './hamburger';\r\nexport default Hamburger;","import React, { Component } from 'react';\r\n\r\nimport './hamburger.css'\r\n\r\nexport default class Hamburger extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"hamburger\">\r\n                <span className=\"hamburger__line\"></span>\r\n                <span className=\"hamburger__line\"></span>\r\n                <span className=\"hamburger__line\"></span>\r\n            </div>\r\n        )\r\n    }\r\n}","import AllRecipes from './allRecipes';\r\nexport default AllRecipes;","import React, { Component } from 'react';\r\n\r\nimport './allRecipes.css'\r\n\r\nexport default class AllRecipes extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"recipes-link-wrapper\">\r\n                <a className=\"recipes-link\" href=\"#\">Список рецептов (0)</a>\r\n            </div>\r\n        )\r\n    }\r\n}","import AppHeader from './appHeader';\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport Hamburger from '../hamburger';\r\nimport AllRecipes from '../allRecipes';\r\n\r\nimport './appHeader.css'\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-header\">\r\n                <Hamburger/>\r\n                <AllRecipes/>\r\n            </div>\r\n        )\r\n    }\r\n} ","import { combineReducers } from \"redux\";\r\n\r\nconst initialIngredientsState = {\r\n    quantity: 0\r\n}\r\n\r\nconst ingredientsReducer = (state = initialIngredientsState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ING':\r\n            return {\r\n                quantity: state.quantity + 1\r\n            }\r\n        case 'REM_ING':\r\n            return {\r\n                quantity: state.quantity - 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    ings: ingredientsReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import Ingredient from './ingredient';\r\nexport default Ingredient;","import React, { Component } from 'react';\r\n\r\nimport { remIng } from '../../actions';\r\nimport store from '../../store';\r\n\r\nimport './ingredient.css'\r\n\r\nexport default class Ingredient extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            buttonClicked: false\r\n        };\r\n\r\n        this.onInputRemoved = this.onInputRemoved.bind(this)\r\n    }\r\n\r\n    onInputRemoved() {\r\n        this.setState({buttonClicked: true});\r\n        setTimeout(()=>{store.dispatch(remIng())}, 1000);\r\n    }\r\n\r\n    render() {\r\n\r\n        const inputClassList = this.state.buttonClicked ? \r\n                            \"search-container__item input input_removed\" : \"search-container__item input\";\r\n\r\n        return (\r\n            <div className=\"input-wrapper\">\r\n                <input className={inputClassList} placeholder=\"Название ингредиента...\"/>\r\n                <button onClick={this.onInputRemoved} className=\"search-container__removing\">-</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const addIng = () => {\r\n    return {\r\n        type: 'ADD_ING'\r\n    }\r\n}\r\n\r\nconst remIng = () => {\r\n    return {\r\n        type: 'REM_ING'\r\n    }\r\n}\r\n\r\nexport {\r\n    addIng,\r\n    remIng\r\n}","import Add from './add';\r\nexport default Add;","import React, { Component } from 'react';\r\n\r\nimport store from '../../store';\r\nimport { addIng } from '../../actions';\r\n\r\nimport './add.css'\r\n\r\nexport default class Add extends Component {\r\n    render() {\r\n        return (\r\n            <button onClick={() => store.dispatch(addIng())} className=\"search-container__adding\">+</button>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Ingredient from '../ingredient';\r\nimport Add from '../add';\r\n\r\nimport './searchContainer.css'\r\n\r\nclass SearchContainer extends Component {\r\n\r\n    render() {\r\n\r\n        const renderIngs = () => {\r\n            const ings = [];\r\n            for(let i = 0; i <= this.props.quantity; i++) {\r\n                ings.push(<Ingredient key={i}/>)\r\n            }\r\n\r\n            return ings;\r\n        }\r\n\r\n        return (\r\n            <div className=\"search-container\">\r\n                {renderIngs()}\r\n                <Add/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quantity: state.ings.quantity\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchContainer);","import SearchContainer from \"./searchContainer\";\r\nexport default SearchContainer;","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\nimport AppHeader from '../appHeader';\nimport { Provider } from 'react-redux';\nimport SearchContainer from '../searchContainer';\n\nimport store from '../../store';\n\nimport './app.css'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"app\">\n          <AppHeader/>\n          <SearchContainer/>\n        </div>\n      </Provider>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}