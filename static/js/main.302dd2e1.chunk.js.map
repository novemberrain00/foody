{"version":3,"sources":["reducers/index.js","store.js","components/hamburger/hamburger.js","actions/index.js","components/hamburger/index.js","components/allRecipes/index.js","components/allRecipes/allRecipes.js","components/appHeader/index.js","components/appHeader/appHeader.js","components/ingredient/index.js","components/ingredient/ingredient.js","components/searchContainer/searchContainer.js","components/searchContainer/index.js","components/menu/menu.js","components/menu/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["initialIngredientsState","amountForCycle","amountForButton","initialMenuState","isMenuOpened","rootReducer","combineReducers","ings","state","action","type","console","log","menu","store","createStore","Hamburger","hamburgerClassList","this","props","onClick","dispatch","className","Component","connect","AllRecipes","href","AppHeader","Ingredient","showInput","inputClassList","onInputRemoved","bind","setState","setTimeout","amount","placeholder","SearchContainer","ingsArr","i","push","renderIngs","Menu","menuClassList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.302dd2e1.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst initialIngredientsState = {\r\n    amountForCycle: 1,\r\n    amountForButton: 1\r\n}\r\n\r\nconst initialMenuState = {\r\n    isMenuOpened: false\r\n}\r\n\r\nconst ingredientsReducer = (state = initialIngredientsState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ING':\r\n            console.log(state.amountForButton)\r\n            return {\r\n                amountForCycle: state.amountForCycle + 1,\r\n                amountForButton: state.amountForButton + 1\r\n            }\r\n        case 'REM_ING':\r\n            console.log(state.amountForButton)\r\n            return {\r\n                ...state,\r\n                amountForButton: state.amountForButton - 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst menuReducer = (state = initialMenuState, action) => {\r\n    switch(action.type) {\r\n        case 'MENU_OPENED': \r\n            return {\r\n                isMenuOpened: !state.isMenuOpened\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    ings: ingredientsReducer,\r\n    menu: menuReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nimport store from '../../store';\r\nimport { openMenu } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './hamburger.css'\r\n\r\nclass Hamburger extends Component {\r\n    render() {\r\n\r\n        const hamburgerClassList = this.props.isMenuOpened ?\r\n                                \"hamburger hamburger_active\" :\r\n                                \"hamburger\"\r\n\r\n        return (\r\n            <div onClick={()=>{store.dispatch(openMenu())}} className={hamburgerClassList}>\r\n                <span className=\"hamburger__line\"></span>\r\n                <span className=\"hamburger__line\"></span>\r\n                <span className=\"hamburger__line\"></span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMenuOpened: state.menu.isMenuOpened\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Hamburger)","const addIng = () => {\r\n    return {\r\n        type: 'ADD_ING'\r\n    }\r\n}\r\n\r\nconst remIng = () => {\r\n    return {\r\n        type: 'REM_ING'\r\n    }\r\n}\r\n\r\nconst openMenu = () => {\r\n    return {\r\n        type: 'MENU_OPENED'\r\n    }\r\n}\r\n\r\nexport {\r\n    addIng,\r\n    remIng,\r\n    openMenu\r\n}","import Hamburger from './hamburger';\r\nexport default Hamburger;","import AllRecipes from './allRecipes';\r\nexport default AllRecipes;","import React, { Component } from 'react';\r\n\r\nimport './allRecipes.css'\r\n\r\nexport default class AllRecipes extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"recipes-link-wrapper\">\r\n                <a className=\"recipes-link\" href=\"#\">Список рецептов (0)</a>\r\n            </div>\r\n        )\r\n    }\r\n}","import AppHeader from './appHeader';\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport Hamburger from '../hamburger';\r\nimport AllRecipes from '../allRecipes';\r\n\r\nimport './appHeader.css'\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"app-header\">\r\n                <Hamburger/>\r\n                <AllRecipes/>\r\n            </header>\r\n        )\r\n    }\r\n} ","import Ingredient from './ingredient';\r\nexport default Ingredient;","import React, { Component } from 'react';\r\n\r\nimport { remIng } from '../../actions';\r\nimport store from '../../store';\r\n\r\nimport './ingredient.css'\r\n\r\nclass Ingredient extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            showInput: true,\r\n            inputClassList: \"search-container__item input\"\r\n        };\r\n\r\n        this.onInputRemoved = this.onInputRemoved.bind(this)\r\n    }\r\n\r\n    onInputRemoved() {\r\n        this.setState({inputClassList: \"search-container__item input input_removed\"});\r\n        setTimeout(()=>{\r\n            this.setState({showInput: false});\r\n            store.dispatch(remIng());\r\n        }, 990);\r\n    }\r\n\r\n    render() {\r\n        \r\n        if(this.state.showInput) {\r\n            if(this.props.amount > 1) {\r\n                return (\r\n                    <div className=\"input-wrapper\">\r\n                        <input className={this.state.inputClassList} placeholder=\"Название ингредиента...\"/>\r\n                        <button onClick={this.onInputRemoved} className=\"search-container__removing\">-</button>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className=\"input-wrapper\">\r\n                        <input className={this.state.inputClassList} placeholder=\"Название ингредиента...\"/>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Ingredient;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport store from '../../store';\r\nimport { addIng } from '../../actions';\r\n\r\nimport Ingredient from '../ingredient';\r\n\r\nimport './searchContainer.css'\r\n\r\nclass SearchContainer extends Component {\r\n\r\n    renderIngs() {\r\n        const ingsArr = [],\r\n            { amountForCycle, amountForButton } = this.props;\r\n            \r\n        for(let i = 0; i < amountForCycle; i++) {\r\n            ingsArr.push(<Ingredient amount={amountForButton}/>)\r\n        }\r\n\r\n        return ingsArr;\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"search-container\">\r\n                { this.renderIngs() }\r\n                <button onClick={() => store.dispatch(addIng())} className=\"search-container__adding\">\r\n                    +\r\n                </button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        amountForCycle: state.ings.amountForCycle,\r\n        amountForButton: state.ings.amountForButton\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchContainer);","import SearchContainer from \"./searchContainer\";\r\nexport default SearchContainer;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport './menu.css'\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n\r\n        const menuClassList = this.props.isMenuOpened ? \r\n                            'menu menu_opened position-absolute' :\r\n                            'menu position-absolute'\r\n        \r\n        return (\r\n            <nav className={menuClassList}>\r\n                <ul className=\"menu__list\">\r\n                    <li className=\"menu__list-item\">\r\n                        <a className=\"menu__list-link\" href=\"#\">Поиск рецепта</a>\r\n                    </li>\r\n                    <li className=\"menu__list-item\">\r\n                        <a className=\"menu__list-link\" href=\"#\">Каталог рецептов</a>\r\n                    </li>\r\n                    <li className=\"menu__list-item\">\r\n                        <a className=\"menu__list-link\" href=\"#\">Избранные рецепты</a>\r\n                    </li>\r\n                    <li className=\"menu__list-item\">\r\n                        <a className=\"menu__list-link\" href=\"#\">GitHub</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMenuOpened: state.menu.isMenuOpened\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Menu);","import Menu from './menu';\r\nexport default Menu;","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\n\nimport AppHeader from '../appHeader';\nimport { Provider } from 'react-redux';\nimport SearchContainer from '../searchContainer';\nimport Menu from '../menu';\n\nimport store from '../../store';\n\nimport './app.css'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"app\">\n          <Menu/>\n          <AppHeader/>\n          <SearchContainer/>\n        </div>\n      </Provider>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}